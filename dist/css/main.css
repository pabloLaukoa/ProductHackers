/* Variables
 * ===============
 *
 * All variables and most of the configuration is defined on this page. */
/* Containers */
/* Breakpoints */
/* Colors */
/* Typography */
/* Padding */
/* Borders */
/* Buttons */
/* Forms */
/* Tables */
/* Code */
/* Mixins
  =============== */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/* Reset
  =============== */
html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

figure {
  margin: 0;
}

/* Scaffolding
  =============== */
html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font: normal normal normal 1rem/1.6 "Lato";
  font-size: 1rem;
}

body {
  color: #404040;
  background: white;
  font-size: 1rem;
}

p,
ol,
ul,
dl,
table {
  margin: 0 0 1.5rem 0;
}

ul li ul {
  margin-bottom: 0;
}

ol li ol {
  margin-bottom: 0;
}

h1,
h2,
h3,
h4,
h5 {
  margin: 1.5rem 0;
  font-weight: 700;
  font-family: "Lato";
  line-height: 1.2;
  color: #404040;
}

h1:not(:first-child),
h2:not(:first-child),
h3:not(:first-child),
h4:not(:first-child),
h5:not(:first-child) {
  margin: 1.5rem 0;
}

h1:not(:first-child),
h2:not(:first-child),
h3:not(:first-child) {
  margin-top: 2rem;
}

h1 {
  font-size: 1.75rem;
}

h2 {
  font-size: 1.5rem;
}

h3 {
  font-size: 1.25rem;
}

h4 {
  font-size: 1.1rem;
}

h5 {
  font-size: 1rem;
}

@media (min-width: 576px) {
  h1:not(:first-child),
  h2:not(:first-child),
  h3:not(:first-child) {
    margin-top: 2.5rem;
  }
  h1 {
    font-size: 2.25rem;
  }
  h2 {
    font-size: 2rem;
  }
  h3 {
    font-size: 1.6rem;
  }
  h4 {
    font-size: 1.4rem;
  }
  h5 {
    font-size: 1.25rem;
  }
}

a {
  color: #000000;
  text-decoration: none;
}

a:hover, a:active, a:focus {
  color: black;
  text-decoration: underline;
}

mark {
  background: #ffeea8;
  padding: 0 0.2rem;
}

blockquote {
  margin: 0 0 1.5rem 0;
  border-left: 16px solid #f0f0f0;
  padding: 0 1.5rem;
  font-size: 1.5rem;
}

blockquote cite {
  display: block;
  margin-top: 1.5rem;
  font-size: 1rem;
  text-align: right;
}

pre {
  border: 0;
  border-radius: 4px;
  background: transparent;
  padding: 1rem;
  tab-size: 2;
  color: #404040;
  font-family: Menlo, monospace;
  font-size: 14px;
  margin: 0 0 1.5rem 0;
}

pre code {
  font-family: Menlo, monospace;
  line-height: 1.2;
}

kbd {
  background-color: #f7f7f7;
  border: 1px solid #ccc;
  border-radius: 3px;
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2), 0 0 0 2px #fff inset;
  color: #333;
  display: inline-block;
  font-family: Helvetica, Arial, sans-serif;
  font-size: 13px;
  line-height: 1.4;
  margin: 0 .1em;
  padding: .1em .6em;
  text-shadow: 0 1px 0 #fff;
}

:not(pre) > code {
  color: #404040;
  background: transparent;
  font-family: Menlo, monospace;
  font-size: 14px;
  padding: 0 0.2rem;
  border: 1px solid #dedede;
  border-radius: 4px;
}

hr {
  height: 0;
  border: 0;
  border-top: 1px solid #dedede;
}

dt {
  font-weight: 600;
}

dd {
  margin-bottom: .5rem;
}

.full-container {
  max-width: 100%;
  padding: 0 1rem;
}

.container, .small-container, .medium-container {
  max-width: 1200px;
  padding: 0 1rem;
  margin-left: auto;
  margin-right: auto;
}

.small-container {
  max-width: 768px;
}

.medium-container {
  max-width: 992px;
}

.content-section {
  padding: 30px 0;
}

@media (min-width: 576px) {
  .content-section {
    padding: 60px 0;
  }
}

/* Grid
=============== */
.flex-small,
.flex-large {
  padding-left: 1rem;
  padding-right: 1rem;
}

.flex-row {
  margin-left: -1rem;
  margin-right: -1rem;
}

.flex-row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.flex-small,
.flex-large {
  flex-basis: 100%;
  margin-bottom: 1rem;
}

/* Small screen breakpoint */
@media (min-width: 576px) {
  .flex-small {
    flex: 1;
    margin-bottom: 0;
  }
}

/* Large screen breakpoint */
@media (min-width: 992px) {
  .flex-large {
    flex: 1;
    margin-bottom: 0;
  }
}

/* Navigation
  =============== */
.navbar-nav .nav-link {
  margin-right: 1em;
  color: #000000;
}

nav img {
  width: 133px;
}

nav > a {
  font-size: 1rem;
  color: #9b9b9b;
}

nav > a.active {
  color: #000000;
}

/* Layout
  =============== */
a:hover {
  text-decoration: none;
}

.col, .col-1, .col-10, .col-11, .col-12, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-auto, .col-lg, .col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-auto, .col-md, .col-md-1, .col-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-auto, .col-sm, .col-sm-1, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-auto, .col-xl, .col-xl-1, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-auto {
  padding-right: 30px;
  padding-left: 30px;
}

.row {
  margin-right: -30px;
  margin-left: -30px;
}

.nt-section--header {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-align: center;
  align-items: center;
}

.nt-section--header h1 {
  font-size: 1.4rem;
  color: #5e000b;
  display: inline;
}

.nt-section--header hr {
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  margin: 0;
  border-top: 1px solid #5e000b;
  border-bottom: none;
}

.nt-section--body .nt-article h1 {
  font-family: "Montserrat";
  font-weight: 300;
  font-size: 1.6rem;
}

.nt-section--body .nt-article .nt-article--footer {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-align: center;
  align-items: center;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.nt-section--body .nt-article .nt-article--footer a {
  color: #d0021b;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  max-width: 10em;
}

.nt-section--body .nt-article .nt-article--footer a:hover {
  color: #9f2427;
}

.nt-section--body .nt-article .nt-article--date {
  display: inline;
  font-size: 0.9rem;
  margin-left: 15px;
}

.nt-section--body .nt-article-sm h1 {
  font-size: 1.25rem;
}

.nt-section--body .nt-article-md h1 {
  font-size: 1.4rem;
}

.sidebar-sticky {
  position: sticky;
  top: 0;
}

/*# sourceMappingURL=data:application/json;base64, */